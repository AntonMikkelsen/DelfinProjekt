Index: src/ui/UserInterface.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ui;\n\nimport datasource.Controller;\nimport domainmodel.*;\nimport domainmodel.AgeCategory;\nimport domainmodel.MembershipStatus;\n\nimport java.time.LocalDate;\nimport java.util.*;\n\n\npublic class UserInterface {\n    private Scanner scanner;\n    Controller controller = new Controller();\n\n    public UserInterface() {\n        this.scanner = new Scanner(System.in);\n    }\n\n    // Startmenu der gør brugeren kan komme ind på andre menuer bla administrivemenu osv.\n    public void startMenu() {\n        boolean menuRunning = true;\n        while (menuRunning) {\n            greetingsMSG();\n            int userResponse = scanner.nextInt();\n            scanner.nextLine(); // Consume newline\n\n            switch (userResponse) {\n                case 1 -> administrativeMenu();\n                case 2 -> membershipMenu();\n                case 3 -> {\n                    System.out.println(\"Exiting program...\");\n                    menuRunning = false;\n                }\n                default -> System.out.println(\"Invalid option. Please try again.\");\n            }\n        }\n    }\n\n    // Administrive menu, with administrive abilities\n    public void administrativeMenu() {\n        boolean administrativeMenuRunning = true;\n        while (administrativeMenuRunning) {\n            System.out.println(\"\\n=== Administrative Menu ===\");\n            System.out.println(\"1. Add members from existing teams\");\n            System.out.println(\"2. Remove existing members\");\n            System.out.println(\"3. Edit info on members\");\n            System.out.println(\"4. Show member overview\");\n            System.out.println(\"5. Exit menu\");\n            int userResponse = scanner.nextInt();\n            scanner.nextLine(); // Consume newline\n\n\n            switch (userResponse) {\n                case 1 -> {\n                    System.out.println(\"Add members from existing teams\");\n                    addNewMember();\n                }\n                case 2 -> {\n                    System.out.println(\"Remove existing members\");\n                    String memberId = scanner.nextLine(); // Indhent ID fra brugeren\n                    removeMember(memberId); // Kald metoden til at fjerne medlemmet\n                }\n                case 3 -> {\n                    System.out.println(\"What is the users member ID\");\n                    String memberID = scanner.nextLine();\n                    administatorEditInfo();\n                }\n                case 4 -> showMemberOverviewMenu();\n                case 5 -> administrativeMenuRunning = false;\n                default -> System.out.println(\"Invalid option. Please try again.\");\n            }\n        }\n    }\n\n\n    public void membershipMenu() {\n        boolean membershipMenuRunning = true;\n        while (membershipMenuRunning) {\n            System.out.println(\"\\n=== Membership Menu ===\");\n            System.out.println(\"1. See membership details\");\n            System.out.println(\"2. Edit membership details and status\");\n            System.out.println(\"3. Financial Overview\");\n            System.out.println(\"4. Exit menu\");\n\n            int userResponse = scanner.nextInt();\n            scanner.nextLine();\n\n            switch (userResponse) {\n                case 1 -> {\n                    System.out.println(\"Write your member id\");\n                    String userMemberID = scanner.nextLine();\n                    showMemberInfo(userMemberID);\n                }\n                case 2 -> {\n                    System.out.println(\"Edit membership details and status\");\n                    editMember();\n                }\n                case 3 -> membershipMenuRunning = false;\n                case 4 -> {\n                    System.out.println(\"\");\n                }\n                default -> System.out.println(\"Invalid option. Please try again.\");\n            }\n        }\n    }\n\n    private void showMemberOverviewMenu() {\n        boolean overviewMenuRunning = true;\n        while (overviewMenuRunning) {\n            System.out.println(\"\\n=== Member Overview ===\");\n            System.out.println(\"1. View all members\");\n            System.out.println(\"2. View team members\");\n            System.out.println(\"3. View competitive team members\"); // nyt implementering\n            System.out.println(\"4. View competitive swimmers sorted by discipline\"); // nyt implementering\n            System.out.println(\"0. Back to main menu\");\n            System.out.print(\"Enter your choice: \");\n\n            int choice = scanner.nextInt();\n            scanner.nextLine();\n\n            switch (choice) {\n                case 1 -> controller.displayMembers();\n                case 2 -> displayAllTeamMembers();\n                // case 3 - > view all comp members by team\n                // case 4 ->  CompetitiveSwimmer.printAllCompSwimmersBestDiscipline(); -- Ydligere valg om de vil sorterer de 5 bedste svømmere udfra disciplin\n                case 0 -> overviewMenuRunning = false;\n                default -> System.out.println(\"Invalid choice. Please try again.\");\n            }\n        }\n    }\n\n    private void displayAllTeamMembers() {\n        System.out.println(\"\\n1. Junior Team\");\n        System.out.println(\"2. Senior Team\");\n        System.out.print(\"Select team: \");\n\n        int choice = scanner.nextInt();\n        scanner.nextLine(); // Consume newline\n\n        Team selectedTeam = switch (choice) {\n            case 1 -> new Team(\"Junior Team\", AgeCategory.JUNIOR);\n            case 2 -> new Team(\"Senior Team\", AgeCategory.SENIOR);\n            default -> {\n                System.out.println(\"Invalid team selection\");\n                yield null;\n            }\n        };\n\n        if (selectedTeam != null) {\n            ArrayList<CompetitiveSwimmer> teamMembers = controller.getCompSwimmers();\n            System.out.println(\"\\n=== Team \" + selectedTeam.getTeamName() + \" Members ===\");\n            printHeaderLine();\n\n            for (CompetitiveSwimmer swimmer : teamMembers) {\n                printSwimmerInfo(swimmer);\n            }\n            System.out.println(\"Total Team Members: \" + teamMembers.size());\n        }\n        waitForEnter();\n    }\n\n\n/*\n    // Displays competitive members by team\n    private void displayAllCompetitiveTeamMembers() {\n        System.out.println(\"\\n1. Junior Team\");\n        System.out.println(\"2. Senior Team\");\n        System.out.print(\"Select team: \");\n\n        int choice = scanner.nextInt();\n        scanner.nextLine(); // Consume newline\n\n        String teamName = null;\n\n\n        if (choice == 1){\n            teamName == \"Junior Team\";\n        }\n    }\n */\n\n    // Method to greet the user, and save sout's.\n    private void greetingsMSG() {\n        System.out.println(\"\\n=== Welcome To Your Swimming Park System ===\");\n        System.out.println(\"1. Administrative data\");\n        System.out.println(\"2. Membership management\");\n        System.out.println(\"3. Exit\");\n        System.out.print(\"Enter your choice: \");\n    }\n\n\n\n    //\n    private void printHeaderLine() {\n        System.out.printf(\"%-10s %-15s %-15s %-5s %-10s %-15s%n\",\n                \"ID\", \"First Name\", \"Last Name\", \"Age\", \"Status\", \"Team\");\n        System.out.println(\"=\".repeat(70));\n    }\n\n    public void printSwimmerInfo(CompetitiveSwimmer swimmer) {\n        System.out.printf(\"%-10s %-15s %-15s %-5d %-10s %-15s %s%n\",\n                swimmer.getMemberID(),\n                swimmer.getFirstName(),\n                swimmer.getLastName(),\n                swimmer.calculateAge(),\n                swimmer.getMembershipStatus(),\n                swimmer.getTeam().getTeamName(),\n                String.join(\", \", swimmer.getDisciplines()));\n    }\n\n    public Member printMemberInfo(Member member) {\n        System.out.printf(\"%-10s %-15s %-15s %-5d %-10s %-15s%n\",\n                member.getMemberID(),\n                member.getFirstName(),\n                member.getLastName(),\n                member.calculateAge(),\n                member.getMembershipStatus(),\n                \"No Team\");\n        return member;\n    }\n\n\n    private void removeMember(String memberID) {\n\n        System.out.println(\"enter the a membersID to remove the member\");\n\n        ArrayList<Member> members = controller.getMembers();\n        Member toRemove = null;\n\n        for (Person person : members) {\n            if (person instanceof Member && ((Member) person).getMemberID().equals(memberID)) {\n                toRemove = (Member) person;\n                break;\n            }\n        }\n        if (toRemove != null && members.remove(toRemove)) {\n            members.remove(memberID);\n            System.out.println(\"Member removed successfully: \" + toRemove.getFirstName() + \" \" + toRemove.getLastName());\n        } else {\n            System.out.println(\"Member does not exist\");\n        }\n    }\n\n    private void addNewMember() {\n        System.out.println(\"------------------------\");\n        System.out.println(\"\\nEnter first name: \");\n        String firstName = scanner.nextLine();\n        System.out.println(\"First name: \" + firstName);\n\n        System.out.println(\"\\nEnter last name: \");\n        String lastName = scanner.nextLine();\n        System.out.println(\"Last name: \" + lastName);\n\n        LocalDate dob = null;\n        while (dob == null) {\n            System.out.println(\"\\nEnter date of birth (YYYY-MM-DD): \");\n            try {\n                dob = LocalDate.parse(scanner.nextLine());\n                System.out.println(\"Date of birth: \" + dob);\n            } catch (Exception e) {\n                System.out.println(\"An error has occured: \" + e.getMessage() + \" - Please try again\");\n            }\n        }\n\n        System.out.println(\"\\nEnter email: \");\n        String email = scanner.nextLine();\n        while (!email.contains(\"@\") && !email.contains(\".\")) {\n            if (email.contains(\"@\")) {\n                System.out.println(\"Email: \" + email);\n            } else {\n                System.out.println(\"Please enter a valid email\");\n                email = scanner.nextLine();\n            }\n        }\n\n        System.out.println(\"\\nEnter phone number: \");\n        String phone = scanner.nextLine();\n        System.out.println(\"Phone number: \" + phone);\n\n        System.out.println(\"\\nEnter address: \");\n        String address = scanner.nextLine();\n        System.out.println(\"address: \" + address);\n\n        MembershipStatus status = null;\n        while (status == null) {\n            try {\n                System.out.println(\"\\nEnter membership status *Enter Passive/Active*: \");\n                status = MembershipStatus.valueOf(scanner.nextLine().toUpperCase());\n                System.out.println(\"membership stauts: \" + status);\n            } catch (IllegalArgumentException e) {\n                System.out.println(\"An error has occured: \" + e.getMessage() + \" - Please try again\");\n            }\n        }\n\n\n        String memberId = \"ID\" + (controller.getMembers().size() + 1);\n\n        Member newMember = new Member(firstName, lastName, dob, email, phone, address, memberId, status);\n\n        // Ændre til nye add metode\n        controller.addMember(firstName, lastName, dob, email, phone, address, memberId, status);\n        controller.displayMembers();\n\n        System.out.println(\"Member added successfully: \" + newMember.getFirstName() + \" \" + newMember.getLastName());\n\n    }\n\n    private void waitForEnter() {\n        System.out.println(\"\\nPress Enter to continue...\");\n        scanner.nextLine();\n    }\n\n    public Member showMemberInfo(String memberID) {\n        ArrayList<Member> Members = controller.getMembers();\n        Member toSearch = null;\n        for (Person person : Members) {\n            if (person instanceof Member && ((Member) person).getMemberID().equals(memberID)) ;{\n                toSearch = (Member) person;\n                break;\n            }\n        }\n        if (toSearch != null) {\n            System.out.println(printMemberInfo(toSearch));\n        } else {\n            System.out.println(\"Member does not exist\");\n        }\n        return null;\n    }\n\n    public Member administatorEditInfo() {\n        System.out.println(\"\\n=== Edit Member Information ===\");\n        System.out.println(\"Enter member ID to edit: \");\n        String memberID = scanner.nextLine();\n\n        ArrayList<Member> members = controller.getMembers();\n        Member memberToEdit = null;\n\n        // Find the member\n        for (Person person : members) {\n            if (person instanceof Member && ((Member) person).getMemberID().equals(memberID)) {\n                memberToEdit = (Member) person;\n                break;\n            }\n        }\n\n        if (memberToEdit == null) {\n            System.out.println(\"Member not found.\");\n            return null;\n        }\n\n        boolean editing = true;\n        while (editing) {\n            System.out.println(\"\\nCurrent Member Information:\");\n            printMemberInfo(memberToEdit);\n\n            System.out.println(\"\\nWhat would you like to edit?\");\n            System.out.println(\"1. First Name (Current: \" + memberToEdit.getFirstName() + \")\");\n            System.out.println(\"2. Last Name (Current: \" + memberToEdit.getLastName() + \")\");\n            System.out.println(\"3. Email (Current: \" + memberToEdit.getEmail() + \")\");\n            System.out.println(\"4. Phone Number (Current: \" + memberToEdit.getPhoneNumber() + \")\");\n            System.out.println(\"5. Address (Current: \" + memberToEdit.getAddress() + \")\");\n            System.out.println(\"6. MemberID(Current: \" + memberToEdit.getMemberID() + \")\");\n            System.out.println(\"7. Membership Status (Current: \" + memberToEdit.getMembershipStatus() + \")\");\n            System.out.println(\"8. Save and Exit\");\n\n            int choice = scanner.nextInt();\n            scanner.nextLine(); // Consume newline\n\n            switch (choice) {\n\n                case 1 -> {\n                    System.out.println(\"Enter new first name: \");\n                    String firstName = scanner.nextLine();\n                    memberToEdit.setFirstName(firstName);\n                    System.out.println(\"First name updated successfully.\");\n                }\n                case 2 -> {\n                    System.out.println(\"Enter new last name: \");\n                    String lastName = scanner.nextLine();\n                    memberToEdit.setLastName(lastName);\n                    System.out.println(\"Last name updated successfully.\");\n                }\n                case 3 -> {\n                    System.out.println(\"Enter new email: \");\n                    String email = scanner.nextLine();\n                    while (!email.contains(\"@\") || !email.contains(\".\")) {\n                        System.out.println(\"Please enter a valid email address: \");\n                        email = scanner.nextLine();\n                    }\n                    memberToEdit.setEmail(email);\n                    System.out.println(\"Email updated successfully.\");\n                }\n                case 4 -> {\n                    System.out.println(\"Enter new phone number: \");\n                    String phone = scanner.nextLine();\n                    memberToEdit.setPhoneNumber(phone);\n                    System.out.println(\"Phone number updated successfully.\");\n                }\n                case 5 -> {\n                    System.out.println(\"Enter new address: \");\n                    String address = scanner.nextLine();\n                    memberToEdit.setAddress(address);\n                    System.out.println(\"Address updated successfully.\");\n                }\n                case 6 -> {\n                    MembershipStatus newStatus = null;\n                    while (newStatus == null) {\n                        try {\n                            System.out.println(\"Enter new membership status (ACTIVE/PASSIVE): \");\n                            String statusInput = scanner.nextLine().toUpperCase();\n                            newStatus = MembershipStatus.valueOf(statusInput);\n                            memberToEdit.setMembershipStatus(newStatus);\n                            System.out.println(\"Membership status updated successfully.\");\n                        } catch (IllegalArgumentException e) {\n                            System.out.println(\"Invalid status. Please enter either ACTIVE or PASSIVE.\");\n                        }\n                    }\n                }\n                case 7 -> {\n                    System.out.println(\"Enter new MemberID: \");\n                    String newMemberID = scanner.nextLine();\n\n                    // Check if the new MemberID is already in use\n                    boolean idExists = false;\n                    for (Person person : members) {\n                        if (person instanceof Member && ((Member) person).getMemberID().equals(newMemberID)) {\n                            idExists = true;\n                            break;\n                        }\n                    }\n                    if (!idExists) {\n                        memberToEdit.setMemberID(newMemberID);\n                        System.out.println(\"MemberID updated successfully.\");\n                    } else {\n                        System.out.println(\"The MemberID is already in use. Please try a different one.\");\n                    }\n                }\n                case 8 -> {\n                    System.out.println(\"Changes saved successfully.\");\n                    editing = false;\n                }\n                default -> System.out.println(\"Invalid option. Please try again.\");\n            }\n        }\n        return null;\n    }\n\n    private int validateInt(){\n        while(true){\n            try {\n                return scanner.nextInt();\n            }\n            catch (InputMismatchException e)\n            {\n                System.out.println(\"Please enter a valid number\");\n                scanner.nextLine();\n            }\n        }\n    }\n\n    private void editMember() {\n        System.out.println(\"\\n=== Edit Member Information ===\");\n        System.out.println(\"Enter member ID to edit: \");\n        String memberID = scanner.nextLine();\n\n        ArrayList<Member> members = controller.getMembers();\n        Member memberToEdit = null;\n\n        // Find the member\n        for (Person person : members) {\n            if (person instanceof Member && ((Member) person).getMemberID().equals(memberID)) {\n                memberToEdit = (Member) person;\n                break;\n            }\n        }\n\n        if (memberToEdit == null) {\n            System.out.println(\"Member not found.\");\n            return;\n        }\n\n        boolean editing = true;\n        while (editing) {\n            System.out.println(\"\\nCurrent Member Information:\");\n            printMemberInfo(memberToEdit);\n\n            System.out.println(\"\\nWhat would you like to edit?\");\n            System.out.println(\"1. First Name (Current: \" + memberToEdit.getFirstName() + \")\");\n            System.out.println(\"2. Last Name (Current: \" + memberToEdit.getLastName() + \")\");\n            System.out.println(\"3. Email (Current: \" + memberToEdit.getEmail() + \")\");\n            System.out.println(\"4. Phone Number (Current: \" + memberToEdit.getPhoneNumber() + \")\");\n            System.out.println(\"5. Address (Current: \" + memberToEdit.getAddress() + \")\");\n            System.out.println(\"6. Membership Status (Current: \" + memberToEdit.getMembershipStatus() + \")\");\n            System.out.println(\"7. Save and Exit\");\n\n            int choice = scanner.nextInt();\n            scanner.nextLine(); // Consume newline\n\n            switch (choice) {\n                case 1 -> {\n                    System.out.println(\"Enter new email: \");\n                    String email = scanner.nextLine();\n                    while (!email.contains(\"@\") || !email.contains(\".\")) {\n                        System.out.println(\"Please enter a valid email address: \");\n                        email = scanner.nextLine();\n                    }\n                    memberToEdit.setEmail(email);\n                    System.out.println(\"Email updated successfully.\");\n                }\n                case 2 -> {\n                    System.out.println(\"Enter new phone number: \");\n                    String phone = scanner.nextLine();\n                    memberToEdit.setPhoneNumber(phone);\n                    System.out.println(\"Phone number updated successfully.\");\n                }\n                case 3 -> {\n                    System.out.println(\"Enter new address: \");\n                    String address = scanner.nextLine();\n                    memberToEdit.setAddress(address);\n                    System.out.println(\"Address updated successfully.\");\n                }\n                case 4 -> {\n                    System.out.println(\"Changes saved successfully.\");\n                    editing = false;\n                }\n                default -> System.out.println(\"Invalid option. Please try again.\");\n            }\n        }\n    }\n    public void printMSG(String msg){\n        System.out.println(msg);\n    }\n\n\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/ui/UserInterface.java b/src/ui/UserInterface.java
--- a/src/ui/UserInterface.java	(revision 8bc2072020c2dfdf4ef91cc0de77ef6184cf0f8f)
+++ b/src/ui/UserInterface.java	(date 1733755126565)
@@ -11,7 +11,7 @@
 
 public class UserInterface {
     private Scanner scanner;
-    Controller controller = new Controller();
+    private Controller controller = new Controller();
 
     public UserInterface() {
         this.scanner = new Scanner(System.in);
@@ -28,7 +28,8 @@
             switch (userResponse) {
                 case 1 -> administrativeMenu();
                 case 2 -> membershipMenu();
-                case 3 -> {
+                case 3 -> displayFinancialOverview();
+                case 4 -> {
                     System.out.println("Exiting program...");
                     menuRunning = false;
                 }
@@ -80,7 +81,6 @@
             System.out.println("\n=== Membership Menu ===");
             System.out.println("1. See membership details");
             System.out.println("2. Edit membership details and status");
-            System.out.println("3. Financial Overview");
             System.out.println("4. Exit menu");
 
             int userResponse = scanner.nextInt();
@@ -96,10 +96,12 @@
                     System.out.println("Edit membership details and status");
                     editMember();
                 }
-                case 3 -> membershipMenuRunning = false;
-                case 4 -> {
-                    System.out.println("");
+                case 3 -> {
+                    System.out.println("\n=== Financial Overview Menu ===");
+
                 }
+                case 4 -> membershipMenuRunning = false;
+
                 default -> System.out.println("Invalid option. Please try again.");
             }
         }
@@ -130,6 +132,20 @@
         }
     }
 
+
+    private void displayFinancialOverview(){
+        System.out.println("1. View total income generated from all current members");
+        System.out.println("2. View total debt from all members in arrears");
+
+        int choice = validateInt();
+
+        switch(choice){
+            case 1 -> {
+                controller.cashierTotalIncomeGenerated();
+            }
+        }
+    }
+
     private void displayAllTeamMembers() {
         System.out.println("\n1. Junior Team");
         System.out.println("2. Senior Team");
@@ -185,7 +201,8 @@
         System.out.println("\n=== Welcome To Your Swimming Park System ===");
         System.out.println("1. Administrative data");
         System.out.println("2. Membership management");
-        System.out.println("3. Exit");
+        System.out.println("3. Financial Overview");
+        System.out.println("4. Exit");
         System.out.print("Enter your choice: ");
     }
 
Index: src/datasource/Controller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package datasource;\n\nimport domainmodel.*;\nimport ui.UserInterface;\n\nimport java.time.LocalDate;\nimport java.util.ArrayList;\n\n\npublic class Controller {\n    private MembershipRegistration Memberships = new MembershipRegistration();\n\n\n    public Member addMember(String firstName, String lastName, LocalDate dateOfBirth, String email, String phoneNumber, String address, String memberID, MembershipStatus membershipStatus) {\n        Memberships.addMember(firstName, lastName, dateOfBirth, email, phoneNumber, address, memberID, membershipStatus);\n        return null;\n    }\n\n    public ArrayList<CompetitiveSwimmer> getCompSwimmers() {\n        return Memberships.getAllCompetitiveSwimmers();\n    }\n\n    public void displayMembers(){\n        Memberships.displayMembers();\n    }\n\n    public ArrayList<Member> getMembers() {\n        return Memberships.getAllMembers();\n    }\n\n    public ArrayList<String> listOfAllMembers() {\n        return Memberships.getListOfMembers();\n    }\n\n    public ArrayList<String> listOfComp() {\n        return Memberships.getListOfCompetitiveSwimmers();\n    }\n\n    /* udkommenteret så programmet kan køre - skal stadig bruges tror jeg\n    public void addMemberToTeam(Member newMember) {\n        Memberships.addMemberToTeam(newMember,  );\n    }\n\n     */\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/datasource/Controller.java b/src/datasource/Controller.java
--- a/src/datasource/Controller.java	(revision 8bc2072020c2dfdf4ef91cc0de77ef6184cf0f8f)
+++ b/src/datasource/Controller.java	(date 1733755126614)
@@ -36,10 +36,12 @@
         return Memberships.getListOfCompetitiveSwimmers();
     }
 
-    /* udkommenteret så programmet kan køre - skal stadig bruges tror jeg
+    public void cashierTotalIncomeGenerated(){
+        Memberships.cashierTotalIncomeGenerated();
+    }
+
+
     public void addMemberToTeam(Member newMember) {
-        Memberships.addMemberToTeam(newMember,  );
+        Memberships.addMemberToTeam(newMember,new Team("Pop"));
     }
-
-     */
 }
\ No newline at end of file
Index: src/domainmodel/Cashier.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package domainmodel;\n\nimport java.util.ArrayList;\n\npublic class Cashier {\n    ArrayList<Member> allMembers;\n    ArrayList<Member> allMembersInArrears;\n\n\n    public Cashier(ArrayList<Member> allMembers){\n        this.allMembers = allMembers;\n        this.allMembersInArrears = membersInArrears();\n    }\n\n\n    public double calculateMembershipFee(Member member){\n\n        // Costs of all different membership\n        final double costOfNormalSeniorMembership = 1600;\n        final double costOfJuniorMembership = 1000;\n        final double costOfPassiveMembership = 500;\n        final double seniorDiscount = 0.75;\n\n        if (member.getMembershipStatus() == MembershipStatus.PASSIVE) {\n            return costOfPassiveMembership;\n        }\n\n        if(member.calculateAge() < 18) {\n            return costOfJuniorMembership;\n        }\n\n        if (member.calculateAge() >= 60) {\n            return costOfNormalSeniorMembership * seniorDiscount;\n        }\n\n        return costOfNormalSeniorMembership; //Den normale seniorpris over 18, under 60 år.\n    }\n\n    public void addMember(Member member){\n        allMembers.add(member);\n    }\n\n    public void addMemberInArrear(Member member){\n        allMembersInArrears.add(member);\n    }\n\n    public void removeMemberInArrear(Member member){\n        allMembersInArrears.remove(member);\n    }\n\n    public void removeMember(Member member){\n        allMembers.remove(member);\n    }\n\n\n    public ArrayList<Member> membersInArrears(){\n        ArrayList<Member> membersIsInArrears = new ArrayList<>();\n\n        for (Member member : allMembers){\n            if(member.isInArrears()) {\n                membersIsInArrears.add(member);\n            }\n        }\n        return membersIsInArrears;\n    }\n\n\n    //Denne metode virker pga. den bruger den anden membershipFee metode der tager cashieren som holder fast på alle de medlemmer der findes. uden denne metode vil det altid returnerer nul da den ikke holder på nogen mennesker\n    public double getTotalOfDebt(){\n        double totalDebt = 0;\n\n        for (Member member : allMembersInArrears){\n            totalDebt += member.getMembershipFee1(this);\n        }\n        return totalDebt;\n    }\n\n    /* Denne metode virker ikke da den kun udregner membershipFee for hvert person uden rigitg at tilføje det nogen stedet\n    public double getTotalOfDebt(){\n        double totalDebt = 0;\n\n        for (Member member : allMembersInArrears){\n            totalDebt += member.getMembershipFee();\n        }\n        return totalDebt;\n    }\n\n     */\n\n\n    public double getTotalGeneratedIncome(){\n        double totalMoney = 0;\n\n        //Calculates all money generated from paid members\n        for(Member member : allMembers){\n            totalMoney += member.getMembershipFee1(this);\n        }\n        return totalMoney;\n    }\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/domainmodel/Cashier.java b/src/domainmodel/Cashier.java
--- a/src/domainmodel/Cashier.java	(revision 8bc2072020c2dfdf4ef91cc0de77ef6184cf0f8f)
+++ b/src/domainmodel/Cashier.java	(date 1733755126622)
@@ -3,8 +3,8 @@
 import java.util.ArrayList;
 
 public class Cashier {
-    ArrayList<Member> allMembers;
-    ArrayList<Member> allMembersInArrears;
+    private ArrayList<Member> allMembers;
+    private ArrayList<Member> allMembersInArrears;
 
 
     public Cashier(ArrayList<Member> allMembers){
@@ -75,18 +75,6 @@
         return totalDebt;
     }
 
-    /* Denne metode virker ikke da den kun udregner membershipFee for hvert person uden rigitg at tilføje det nogen stedet
-    public double getTotalOfDebt(){
-        double totalDebt = 0;
-
-        for (Member member : allMembersInArrears){
-            totalDebt += member.getMembershipFee();
-        }
-        return totalDebt;
-    }
-
-     */
-
 
     public double getTotalGeneratedIncome(){
         double totalMoney = 0;
Index: src/domainmodel/MembershipRegistration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package domainmodel;\n\nimport datasource.FileHandler;\n\nimport java.io.File;\nimport java.time.LocalDate;\nimport java.util.ArrayList;\n\npublic class MembershipRegistration {\n    private final ArrayList<Member> membersList;\n    private final ArrayList<Team> teams;\n\n    public MembershipRegistration() {\n        this.membersList = new ArrayList<>();\n        this.teams = new ArrayList<>();\n    }\n\n    // Hent alle medlemmer\n    public ArrayList<Member> getAllMembers() {\n    for (Member member : membersList){\n        System.out.println(member);\n        }\n    return membersList;\n    }\n\n    public void displayMembers(){\n        new FileHandler().loadMembersFromFile();\n    }\n\n    // Tilføj nyt medlem\n    public void addMember(String firstName, String lastName, LocalDate dateOfBirth, String email, String phoneNumber, String address, String memberID, MembershipStatus membershipStatus) {\n        Member member = new Member(firstName, lastName, dateOfBirth, email, phoneNumber, address, memberID, membershipStatus);\n        membersList.add(member);\n        FileHandler.saveMembersToFile(membersList);\n    }\n\n    // Fjern medlem\n    public boolean removeMember(Member member) {\n        if (membersList.remove(member)) {\n            return true;\n        }\n        return false; // Return false, hvis medlemmet ikke findes\n    }\n\n    // Hent alle konkurrerende svømmere\n    public ArrayList<CompetitiveSwimmer> getAllCompetitiveSwimmers() {\n        ArrayList<CompetitiveSwimmer> competitiveSwimmers = new ArrayList<>();\n        for (Member member : membersList) {\n            if (member instanceof CompetitiveSwimmer) {\n                competitiveSwimmers.add((CompetitiveSwimmer) member);\n            }\n        }\n        return competitiveSwimmers;\n    }\n\n    // Hent hold\n    public ArrayList<Team> getAllTeams() {\n        return new ArrayList<>(teams);\n    }\n\n    // Tilføj nyt hold\n    public boolean addTeam(Team team) {\n        if (!teams.contains(team)) {\n            teams.add(team);\n            return true;\n        }\n        return false; // Return false, hvis holdet allerede findes\n    }\n\n    // Tilføj medlem til hold\n    public void addMemberToTeam(Member member, Team team) {\n        if (teams.contains(team)) {\n            team.addSwimmersToTeam((CompetitiveSwimmer) member);\n        }\n    }\n\n    // Liste over medlemmer\n    public ArrayList<String> getListOfMembers() {\n        ArrayList<String> list = new ArrayList<>();\n        for (Member member : membersList) {\n            list.add(member.toString());\n        }\n        return list;\n    }\n\n    // Liste over konkurrerende svømmere\n    public ArrayList<String> getListOfCompetitiveSwimmers() {\n        ArrayList<String> list = new ArrayList<>();\n        for (CompetitiveSwimmer swimmer : getAllCompetitiveSwimmers()) {\n            list.add(swimmer.toString());\n        }\n        return list;\n    }\n\n    @Override\n    public String toString() {\n        return \"MembershipRegistration{\" +\n                \"membersListSize=\" + membersList.size() +\n                \", teamsSize=\" + teams.size() +\n                '}';\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/domainmodel/MembershipRegistration.java b/src/domainmodel/MembershipRegistration.java
--- a/src/domainmodel/MembershipRegistration.java	(revision 8bc2072020c2dfdf4ef91cc0de77ef6184cf0f8f)
+++ b/src/domainmodel/MembershipRegistration.java	(date 1733755183730)
@@ -7,13 +7,18 @@
 import java.util.ArrayList;
 
 public class MembershipRegistration {
-    private final ArrayList<Member> membersList;
-    private final ArrayList<Team> teams;
+    private ArrayList<Member> membersList;
+    private ArrayList<Team> teams;
+    private FileHandler fileHandler;
+    private Cashier cashier;
 
     public MembershipRegistration() {
         this.membersList = new ArrayList<>();
         this.teams = new ArrayList<>();
+        this.cashier = new Cashier(membersList); // Initialize the cashier with the members list
     }
+
+
 
     // Hent alle medlemmer
     public ArrayList<Member> getAllMembers() {
@@ -74,6 +79,11 @@
         }
     }
 
+    public void cashierTotalIncomeGenerated(){
+        cashier.getTotalGeneratedIncome();
+        System.out.printf("Total money generated: %.2f%n", cashier.getTotalGeneratedIncome());
+    }
+
     // Liste over medlemmer
     public ArrayList<String> getListOfMembers() {
         ArrayList<String> list = new ArrayList<>();
Index: .idea/libraries/junit_jupiter.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/junit_jupiter.xml b/.idea/libraries/junit_jupiter.xml
new file mode 100644
--- /dev/null	(date 1733755123901)
+++ b/.idea/libraries/junit_jupiter.xml	(date 1733755123901)
@@ -0,0 +1,17 @@
+<component name="libraryTable">
+  <library name="junit.jupiter" type="repository">
+    <properties maven-id="org.junit.jupiter:junit-jupiter:5.11.3" />
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.11.3/junit-jupiter-5.11.3.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.11.3/junit-jupiter-api-5.11.3.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.11.3/junit-platform-commons-1.11.3.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.11.3/junit-jupiter-params-5.11.3.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.11.3/junit-jupiter-engine-5.11.3.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.11.3/junit-platform-engine-1.11.3.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"56fbd3d6-8d8d-4361-b361-784d3a053765\" name=\"Changes\" comment=\"Fikset FileHandler\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"Kontingent\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;AntonMikkelsen&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/AntonMikkelsen/DelfinProjekt.git&quot;,\n    &quot;accountId&quot;: &quot;d397fe5b-eafc-4641-b055-bacfcc291a37&quot;\n  }\n}</component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 8\n}</component>\n  <component name=\"ProjectId\" id=\"2pL08lobyKR6Ztp1n3A9HSjlO4z\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;configurable.group.appearance&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"RunManager\">\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\n      <module name=\"DelfinProjekt\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.Main\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-jdk-9823dce3aa75-b114ca120d71-intellij.indexing.shared.core-IU-242.21829.142\" />\n        <option value=\"bundled-js-predefined-d6986cc7102b-7c0b70fcd90d-JavaScript-IU-242.21829.142\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"56fbd3d6-8d8d-4361-b361-784d3a053765\" name=\"Changes\" comment=\"\" />\n      <created>1732529891102</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1732529891102</updated>\n      <workItem from=\"1732529892558\" duration=\"4759000\" />\n      <workItem from=\"1732619202511\" duration=\"69994000\" />\n      <workItem from=\"1733688078453\" duration=\"10179000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Første commit - tester\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732529934577</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732529934577</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Added addTeam and isJunior methods in Teams.java\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732535108977</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732535108977</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Added manager class, to make it possible for manager to add members to a/the list\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732623892117</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732623892117</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Added manager class, to make it possible for manager to add members to a/the list\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732627396866</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732627396866</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"MembershipFee added\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732628032633</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732628032633</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"FileHandler added\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732707918487</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732707918487</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"added ToString in Person class\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732708143294</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732708143294</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Added calculateAge method, to calculate age from LocalDate\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732708477560</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732708477560</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"test commit, før push\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732792586899</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732792586899</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"Added addNewMember\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732796154499</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732796154499</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"Added addNewMember\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732796865373</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732796865373</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"Added addNewMember til AdministrativeMenu\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732802230556</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732802230556</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"Added addNewMember til AdministrativeMenu\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732805726584</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732805726584</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"Added Remove feature in UI, and added to case\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732806037660</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732806037660</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"Safety commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732809376124</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732809376125</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"Ændret EditMember og lavet AdministratorEdit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1733142770685</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1733142770685</updated>\n    </task>\n    <task id=\"LOCAL-00017\" summary=\"Tjek og fiks på AdminEdit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1733143249332</created>\n      <option name=\"number\" value=\"00017\" />\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1733143249332</updated>\n    </task>\n    <task id=\"LOCAL-00018\" summary=\"Added methods to Team class, and controller class\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1733225205157</created>\n      <option name=\"number\" value=\"00018\" />\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1733225205157</updated>\n    </task>\n    <task id=\"LOCAL-00019\" summary=\"Added &quot;members.csv&quot; og ændret FileHandler så den gemmer indtastede personer i &quot;members.csv&quot;.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1733235959081</created>\n      <option name=\"number\" value=\"00019\" />\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1733235959081</updated>\n    </task>\n    <task id=\"LOCAL-00020\" summary=\"Added MembershipRegistration and methods within it.&#10;&#10;also added new controller methods\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1733488439700</created>\n      <option name=\"number\" value=\"00020\" />\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1733488439700</updated>\n    </task>\n    <task id=\"LOCAL-00021\" summary=\"Added MembershipRegistration and methods within it.&#10;&#10;also added new controller methods\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1733488644216</created>\n      <option name=\"number\" value=\"00021\" />\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1733488644216</updated>\n    </task>\n    <task id=\"LOCAL-00022\" summary=\"Added MembershipRegistration and methods within it.&#10;&#10;also added new controller methods\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1733691399788</created>\n      <option name=\"number\" value=\"00022\" />\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1733691399788</updated>\n    </task>\n    <task id=\"LOCAL-00023\" summary=\"Fikset FileHandler\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1733750362709</created>\n      <option name=\"number\" value=\"00023\" />\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1733750362710</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"24\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State>\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"Manager\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Første commit - tester\" />\n    <MESSAGE value=\"Added addTeam and isJunior methods in Teams.java\" />\n    <MESSAGE value=\"Added manager class, to make it possible for manager to add members to a/the list\" />\n    <MESSAGE value=\"MembershipFee added\" />\n    <MESSAGE value=\"FileHandler added\" />\n    <MESSAGE value=\"added ToString in Person class\" />\n    <MESSAGE value=\"Added calculateAge method, to calculate age from LocalDate\" />\n    <MESSAGE value=\"test commit, før push\" />\n    <MESSAGE value=\"Added addNewMember\" />\n    <MESSAGE value=\"Added addNewMember til AdministrativeMenu\" />\n    <MESSAGE value=\"Added Remove feature in UI, and added to case\" />\n    <MESSAGE value=\"Safety commit\" />\n    <MESSAGE value=\"Ændret EditMember og lavet AdministratorEdit\" />\n    <MESSAGE value=\"Tjek og fiks på AdminEdit\" />\n    <MESSAGE value=\"Added methods to Team class, and controller class\" />\n    <MESSAGE value=\"Added &quot;members.csv&quot; og ændret FileHandler så den gemmer indtastede personer i &quot;members.csv&quot;.\" />\n    <MESSAGE value=\"Added MembershipRegistration and methods within it.&#10;&#10;also added new controller methods\" />\n    <MESSAGE value=\"Fikset FileHandler\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Fikset FileHandler\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 8bc2072020c2dfdf4ef91cc0de77ef6184cf0f8f)
+++ b/.idea/workspace.xml	(date 1733826709947)
@@ -4,7 +4,17 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="56fbd3d6-8d8d-4361-b361-784d3a053765" name="Changes" comment="Fikset FileHandler" />
+    <list default="true" id="56fbd3d6-8d8d-4361-b361-784d3a053765" name="Changes" comment="- Added some comments">
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/junit_jupiter.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Test/domainmodel/CashierTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/DelfinProjekt.iml" beforeDir="false" afterPath="$PROJECT_DIR$/DelfinProjekt.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/datasource/Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/datasource/Controller.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/domainmodel/Cashier.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/domainmodel/Cashier.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/domainmodel/MembershipRegistration.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/domainmodel/MembershipRegistration.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/ui/UserInterface.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/ui/UserInterface.java" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -327,6 +337,7 @@
     <MESSAGE value="Added &quot;members.csv&quot; og ændret FileHandler så den gemmer indtastede personer i &quot;members.csv&quot;." />
     <MESSAGE value="Added MembershipRegistration and methods within it.&#10;&#10;also added new controller methods" />
     <MESSAGE value="Fikset FileHandler" />
-    <option name="LAST_COMMIT_MESSAGE" value="Fikset FileHandler" />
+    <MESSAGE value="- Added some comments" />
+    <option name="LAST_COMMIT_MESSAGE" value="- Added some comments" />
   </component>
 </project>
\ No newline at end of file
Index: DelfinProjekt.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$\">\n      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\n    </content>\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/DelfinProjekt.iml b/DelfinProjekt.iml
--- a/DelfinProjekt.iml	(revision 8bc2072020c2dfdf4ef91cc0de77ef6184cf0f8f)
+++ b/DelfinProjekt.iml	(date 1733755126540)
@@ -3,9 +3,11 @@
   <component name="NewModuleRootManager" inherit-compiler-output="true">
     <exclude-output />
     <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/Test" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
     </content>
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="junit.jupiter" level="project" />
   </component>
 </module>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_21\" default=\"true\" project-jdk-name=\"21\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/out\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 8bc2072020c2dfdf4ef91cc0de77ef6184cf0f8f)
+++ b/.idea/misc.xml	(date 1733755536269)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="21" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_X" default="true" project-jdk-name="21" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: Test/domainmodel/CashierTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Test/domainmodel/CashierTest.java b/Test/domainmodel/CashierTest.java
new file mode 100644
--- /dev/null	(date 1733755771190)
+++ b/Test/domainmodel/CashierTest.java	(date 1733755771190)
@@ -0,0 +1,59 @@
+package domainmodel;
+
+import org.junit.jupiter.api.Assertions;
+import org.junit.jupiter.api.Test;
+
+import java.time.LocalDate;
+import java.util.ArrayList;
+
+import static org.junit.jupiter.api.Assertions.*;
+
+class CashierTest {
+
+    @Test
+    void calculateMembershipFeeActiveSenior() {
+
+
+        //Arrange
+        double expectedCost = 1600;
+        LocalDate birthday = LocalDate.of(2000,12,07);
+        Member member1 = new Member("Hussain", "Mahmoud", birthday, "hussainomar5@gmail.com", "27280295", "Mølledammen", "492014fas", MembershipStatus.ACTIVE);
+        ArrayList<Member> members = new ArrayList<>();
+        members.add(member1);
+        Cashier cashier = new Cashier(members);
+
+
+
+
+        // Act
+        double actualCost = cashier.calculateMembershipFee(member1);
+
+
+        // Assert
+        assertEquals(expectedCost, actualCost);
+
+    }
+    /*
+
+    @Test
+    void calculateMembershipFeePassive(Member member) {
+        double ActualCost = 0;
+
+    }
+
+
+
+    @Test
+    void calculateMembershipFeeJunior(Member member) {
+        double ActualCost = 0;
+
+    }
+
+    @Test
+    void calculateMembershipFeeSeniorDiscount(Member member) {
+        double ActualCost = 0;
+
+    }
+
+     */
+}
\ No newline at end of file
